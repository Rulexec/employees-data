angular.module("ui.slider",[]).value("uiSliderConfig",{}).directive("uiSlider",["uiSliderConfig","$timeout",function(e,i){return e=e||{},{require:"ngModel",compile:function(){return function(n,a,u,l){function r(e,i){return i?parseFloat(e):parseInt(e)}function o(){a.slider("destroy")}var t=angular.extend(n.$eval(u.uiSlider)||{},e),d={min:null,max:null},s=["min","max","step"],v=angular.isUndefined(u.useDecimals)?!1:!0,$=function(){angular.isArray(l.$viewValue)&&t.range!==!0&&(console.warn("Change your range option of ui-slider. When assigning ngModel an array of values then the range option should be set to true."),t.range=!0),angular.forEach(s,function(e){angular.isDefined(u[e])&&(t[e]=r(u[e],v))}),a.slider(t),$=angular.noop};angular.forEach(s,function(e){u.$observe(e,function(i){i&&($(),a.slider("option",e,r(i,v)),l.$render())})}),u.$observe("disabled",function(e){$(),a.slider("option","disabled",!!e)}),n.$watch(u.uiSlider,function(e){$(),void 0!=e&&a.slider("option",e)},!0),i($,0,!0),a.bind("slide",function(e,i){l.$setViewValue(i.values||i.value),n.$apply()}),l.$render=function(){$();var e=t.range===!0?"values":"value";t.range||!isNaN(l.$viewValue)||l.$viewValue instanceof Array?t.range&&!angular.isDefined(l.$viewValue)&&(l.$viewValue=[0,0]):l.$viewValue=0,t.range===!0&&(angular.isDefined(t.min)&&t.min>l.$viewValue[0]&&(l.$viewValue[0]=t.min),angular.isDefined(t.max)&&t.max<l.$viewValue[1]&&(l.$viewValue[1]=t.max),l.$viewValue[0]>l.$viewValue[1]&&(d.min>=l.$viewValue[1]&&(l.$viewValue[0]=d.min),d.max<=l.$viewValue[0]&&(l.$viewValue[1]=d.max)),d.min=l.$viewValue[0],d.max=l.$viewValue[1]),a.slider(e,l.$viewValue)},n.$watch(u.ngModel,function(){t.range===!0&&l.$render()},!0),a.bind("$destroy",o)}}}}]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIj8iXSwibmFtZXMiOlsiYW5ndWxhciIsIm1vZHVsZSIsInZhbHVlIiwiZGlyZWN0aXZlIiwidWlTbGlkZXJDb25maWciLCIkdGltZW91dCIsInJlcXVpcmUiLCJjb21waWxlIiwic2NvcGUiLCJlbG0iLCJhdHRycyIsIm5nTW9kZWwiLCJwYXJzZU51bWJlciIsIm4iLCJkZWNpbWFscyIsInBhcnNlRmxvYXQiLCJwYXJzZUludCIsImRlc3Ryb3kiLCJzbGlkZXIiLCJvcHRpb25zIiwiZXh0ZW5kIiwiJGV2YWwiLCJ1aVNsaWRlciIsInByZXZSYW5nZVZhbHVlcyIsIm1pbiIsIm1heCIsInByb3BlcnRpZXMiLCJ1c2VEZWNpbWFscyIsImlzVW5kZWZpbmVkIiwiaW5pdCIsImlzQXJyYXkiLCIkdmlld1ZhbHVlIiwicmFuZ2UiLCJjb25zb2xlIiwid2FybiIsImZvckVhY2giLCJwcm9wZXJ0eSIsImlzRGVmaW5lZCIsIm5vb3AiLCIkb2JzZXJ2ZSIsIm5ld1ZhbCIsIiRyZW5kZXIiLCIkd2F0Y2giLCJ1bmRlZmluZWQiLCJiaW5kIiwiZXZlbnQiLCJ1aSIsIiRzZXRWaWV3VmFsdWUiLCJ2YWx1ZXMiLCIkYXBwbHkiLCJtZXRob2QiLCJpc05hTiIsIkFycmF5Il0sIm1hcHBpbmdzIjoiQUFHQUEsUUFBUUMsT0FBTyxnQkFBaUJDLE1BQU0scUJBQXFCQyxVQUFVLFlBQWEsaUJBQWtCLFdBQVksU0FBU0MsRUFBZ0JDLEdBRXJJLE1BREFELEdBQWlCQSxPQUViRSxRQUFTLFVBQ1RDLFFBQVMsV0FDTCxNQUFPLFVBQVVDLEVBQU9DLEVBQUtDLEVBQU9DLEdBRWhDLFFBQVNDLEdBQVlDLEVBQUdDLEdBQ3BCLE1BQU8sR0FBYUMsV0FBV0YsR0FBS0csU0FBU0gsR0FvSGpELFFBQVNJLEtBQ0xSLEVBQUlTLE9BQU8sV0FsSGYsR0FBSUMsR0FBVW5CLFFBQVFvQixPQUFPWixFQUFNYSxNQUFNWCxFQUFNWSxjQUFpQmxCLEdBRTVEbUIsR0FDQUMsSUFBSyxLQUNMQyxJQUFLLE1BSUxDLEdBQWMsTUFBTyxNQUFPLFFBQzVCQyxFQUFnQjNCLFFBQVE0QixZQUFZbEIsRUFBTWlCLGNBQXVCLEdBQVAsRUFFMURFLEVBQU8sV0FHSDdCLFFBQVE4QixRQUFRbkIsRUFBUW9CLGFBQWVaLEVBQVFhLFNBQVUsSUFDekRDLFFBQVFDLEtBQUssaUlBQ2JmLEVBQVFhLE9BQVEsR0FPcEJoQyxRQUFRbUMsUUFBUVQsRUFBWSxTQUFTVSxHQUM3QnBDLFFBQVFxQyxVQUFVM0IsRUFBTTBCLE1BQ3hCakIsRUFBUWlCLEdBQVl4QixFQUFZRixFQUFNMEIsR0FBV1QsTUFJekRsQixFQUFJUyxPQUFPQyxHQUNYVSxFQUFPN0IsUUFBUXNDLEtBSW5CdEMsU0FBUW1DLFFBQVFULEVBQVksU0FBU1UsR0FFakMxQixFQUFNNkIsU0FBU0gsRUFBVSxTQUFTSSxHQUN4QkEsSUFDRlgsSUFDQXBCLEVBQUlTLE9BQU8sU0FBVWtCLEVBQVV4QixFQUFZNEIsRUFBUWIsSUFDbkRoQixFQUFROEIsZUFJcEIvQixFQUFNNkIsU0FBUyxXQUFZLFNBQVNDLEdBQ2hDWCxJQUNBcEIsRUFBSVMsT0FBTyxTQUFVLGFBQWNzQixLQUl2Q2hDLEVBQU1rQyxPQUFPaEMsRUFBTVksU0FBVSxTQUFTa0IsR0FDbENYLElBQ2FjLFFBQVZILEdBQ0QvQixFQUFJUyxPQUFPLFNBQVVzQixLQUV4QixHQUdIbkMsRUFBU3dCLEVBQU0sR0FBRyxHQUdsQnBCLEVBQUltQyxLQUFLLFFBQVMsU0FBU0MsRUFBT0MsR0FDOUJuQyxFQUFRb0MsY0FBY0QsRUFBR0UsUUFBVUYsRUFBRzVDLE9BQ3RDTSxFQUFNeUMsV0FJVnRDLEVBQVE4QixRQUFVLFdBQ2RaLEdBQ0EsSUFBSXFCLEdBQVMvQixFQUFRYSxTQUFVLEVBQU8sU0FBVyxPQUU1Q2IsR0FBUWEsUUFBU21CLE1BQU14QyxFQUFRb0IsYUFBaUJwQixFQUFRb0IscUJBQXNCcUIsT0FHMUVqQyxFQUFRYSxRQUFVaEMsUUFBUXFDLFVBQVUxQixFQUFRb0IsY0FDN0NwQixFQUFRb0IsWUFBYyxFQUFFLElBSDVCcEIsRUFBUW9CLFdBQWEsRUFPckJaLEVBQVFhLFNBQVUsSUFHZGhDLFFBQVFxQyxVQUFVbEIsRUFBUUssTUFBUUwsRUFBUUssSUFBTWIsRUFBUW9CLFdBQVcsS0FDbkVwQixFQUFRb0IsV0FBVyxHQUFLWixFQUFRSyxLQUVoQ3hCLFFBQVFxQyxVQUFVbEIsRUFBUU0sTUFBUU4sRUFBUU0sSUFBTWQsRUFBUW9CLFdBQVcsS0FDbkVwQixFQUFRb0IsV0FBVyxHQUFLWixFQUFRTSxLQUloQ2QsRUFBUW9CLFdBQVcsR0FBS3BCLEVBQVFvQixXQUFXLEtBRXZDUixFQUFnQkMsS0FBT2IsRUFBUW9CLFdBQVcsS0FDMUNwQixFQUFRb0IsV0FBVyxHQUFLUixFQUFnQkMsS0FFeENELEVBQWdCRSxLQUFPZCxFQUFRb0IsV0FBVyxLQUMxQ3BCLEVBQVFvQixXQUFXLEdBQUtSLEVBQWdCRSxNQUloREYsRUFBZ0JDLElBQU1iLEVBQVFvQixXQUFXLEdBQ3pDUixFQUFnQkUsSUFBTWQsRUFBUW9CLFdBQVcsSUFHN0N0QixFQUFJUyxPQUFPZ0MsRUFBUXZDLEVBQVFvQixhQUcvQnZCLEVBQU1rQyxPQUFPaEMsRUFBTUMsUUFBUyxXQUNwQlEsRUFBUWEsU0FBVSxHQUNsQnJCLEVBQVE4QixZQUViLEdBS0hoQyxFQUFJbUMsS0FBSyxXQUFZM0IiLCJmaWxlIjoidmVuZG9ycy5qcyIsInNvdXJjZVJvb3QiOiIvc291cmNlLyIsInNvdXJjZXNDb250ZW50IjpbXX0=